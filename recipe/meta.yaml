{% set name = "pycodestyle" %}
{% set version = "2.14.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://pypi.org/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
    sha256: c4b5b517d278089ff9d0abdec919cd97262a3367449ea1c8b49b91529167b783
  - url: https://github.com/PyCQA/{{ name }}/archive/refs/tags/{{ version }}.tar.gz
    sha256: ffcf4dc55f1e5fbdc6dd6acf5db0fd07ded534ae376eee23a742e1410b48d9ae
    folder: gh

build:
  entry_points:
    - pycodestyle = pycodestyle:_main
  skip: true  # [py<39]
  number: 0
  script: {{ PYTHON }} -m pip install . --no-deps -vv --no-build-isolation

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - python

# self.assertEqual(errcode, 1)
# AssertionError: None != 1
{% set tests_to_skip = "test_check_diff" %}

test:
  source_files:
    - gh/tests
    - gh/testing
    - gh/setup.py
    - gh/setup.cfg
  imports:
    - pycodestyle
  requires:
    - pip
    - pytest
  commands:
    - pip check
    - python -c "from importlib.metadata import version; assert(version('{{ name }}')=='{{ version }}')"
    - pytest -k "not {{ tests_to_skip }}" -v gh/tests
    - pycodestyle --help
    - pycodestyle --version

about:
  home: https://pycodestyle.pycqa.org
  license: MIT
  license_file: LICENSE
  license_family: MIT
  description: |
    Pycodestyle is a tool to check your Python code against some of the style conventions in PEP 8.
  summary: Python style guide checker
  doc_url: https://pycodestyle.pycqa.org
  dev_url: https://github.com/PyCQA/pycodestyle

extra:
  recipe-maintainers:
    - jakirkham
    - pmlandwehr
    - jjhelmus
    - sigmavirus24
    - dopplershift
    - ocefpaf